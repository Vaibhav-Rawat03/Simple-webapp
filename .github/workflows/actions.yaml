---
name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Add Docker's GPG key and repository
        run: >
          sudo apt-get update

          sudo apt-get install -y ca-certificates curl

          sudo install -m 0755 -d /etc/apt/keyrings

          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc

          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add Docker repository to Apt sources

          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          sudo apt-get update
      - name: Install Docker
        run: >
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          docker-buildx-plugin docker-compose-plugin
      - name: Check if Docker is working
        run: sudo docker run hello-world
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Check docker is working fine
        run: docker ps
      - name: Build Docker image
        run: |
          docker build -t vaibhavrawat/simple-webapp .
      - name: Push Docker image
        run: |
          docker push vaibhavrawat/simple-webapp

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: SSh to ec2 with minkube
        run: ssh -i K8s.pem ubuntu@13.234.136.113 -y
      - name: Clone project
        run: git clone https://github.com/Vaibhav-Rawat03/Simple-webapp.git .
      - name: Start minikube
        run: minkube start
      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install simple-webapp ./helm-chart \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/simple-webapp \
            --set image.tag=latest